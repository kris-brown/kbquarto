---
title: "Research"
comments: false
---

# Current
I work with a [team](https://www.algebraicjulia.org/) developing applied category theory software in Julia. The primary application here is building tools that make scientific computing and scientific knowledge representation easier, more transparent, and more robust to updating one's model of the world. For an overview, see my talk [Combinatorial Representations of Scientific Knowledge](https://www.youtube.com/watch?v=vJRAw8USmYs).


<iframe width="560" height="315" src="https://www.youtube.com/embed/vJRAw8USmYs"></iframe>

## Model Exploration
The problem of exploring spaces of scientific models and our compositional solution are described in our ACT 2022 paper [-@brown2022modexp]. [[code](https://github.com/kris-brown/ModelExploration.jl)]

## Model inference
We generalized term rewriting to a general setting in our ICGT 2022 paper [-@brown2021rewrite]. We demonstrate some of this functionality in this [notebook](https://nbviewer.org/github/kris-brown/Computational-Category-Theoretic-Rewriting/blob/main/Computational_Category_Theoretic_Rewriting.ipynb). This is being applied to epidemiology with [Sean Wu](https://slwu89.github.io/): [individual-based stochastic models for epidemiology](https://github.com/slwu89/IndividualRewrite)

## C-set automorphisms
As described in this [blog post](https://www.algebraicjulia.org/blog/post/2022/01/cset-automorphisms/), this project concerns extending McKay's graph algorithm (implemented as [nauty](https://pallini.di.uniroma1.it/)) to C-sets, so that isomorphic instances can be immediately seen to be equal. [[code](https://github.com/AlgebraicJulia/CSetAutomorphisms.jl)]

## Model enumeration
 As described at the end of this [blog post](https://62b383e20eb7802fe1b2d124--algebraicjuliablog.netlify.app/post/2022/06/chase/#model_enumeration), model enumeration exhaustively explores a logically constrained search space. This can be used pedagogically to explain mathematical concepts (e.g. give intuition for [natural transformations](https://www.math3ma.com/blog/what-is-a-natural-transformation) by showing the 10 smallest natural transformations) or in an engineering context as a [model checker](https://en.wikipedia.org/wiki/Model_checking). The logical language we can use to specify constraints is that of finite (co)limit [sketches](https://ncatlab.org/nlab/show/sketch). [[code](https://github.com/kris-brown/ModelEnumeration.jl)]


We can compute and prove theorems with string diagrams: [[code](https://github.com/AlgebraicJulia/GraphicalLinearAlgebra)]

# Past
## Knowledge representation and data integration

### Declarative specification of databases
Scientists modeling complicated phenomena don't use explicit (formally-specified) models. This is pragmatic, given current available open-source tools, but informal reasoning ulimately leads to serious challenges in communicating scientific results clearly and sharing data. A relational database backend is important for a scalable modeling tool, but a SQL-less interface is also crucial: the complexity of managing database implementation details quickly becomes unmanagable and unextensible as the model complexity increases. I developed a Python EDSL to help scientists generate relational databases from a natural declaration of scientific facts and to naturally query and publicly communicate their knowledge base. It is commercialized [here](https://www.modelyst.com/).

### Heterogenous data integration, using Category Theory

There is little standardization in how data is to be represented and stored in many scientific fields. However, the varying schemas of different researchers contain significant overlap in information, and for data-driven fields it is especially beneficial to be able to freely switch from one frame of reference to another.
 Furthermore, when we update our view of the world, it's important to be able to migrate our old data, algorithms, and analysis tools into the new framework. When these tools are expressed in the language of C-sets, this migration can be automated in a verifiable way, described in [Categorical data integration for computational science
](https://www.sciencedirect.com/science/article/pii/S0927025619302046) [-@brown2019categorical] with computational chemistry as a case study. As stressed in the paper, these migration tools are of importance to scientists who wish to communicate and share data with lower risk of data misinterpretation. This was implemented using [Categorical Query Language](https://conexus.com/data-warehousing-with-cql/), a tool developed by Conexus AI.


## Development of functionals for Density Functional Theory

As described [here](http://www.slac.stanford.edu/~vossj/project/xc-functionals/), the simulation of chemical reactions using first-principles techniques requires a theoretical framework that is able to describe a wide range of electronic interactions. Under the direction of Johannes Voss, I develop new meta exchange-correlation functionals with a semi-empirical approach, fitting the functional form against higher level of theory and experimental benchmark data. By using Bayesian statistics, we enable uncertainty estimation of the computed reaction energies.

# CV

<object data="../images/cv.pdf" type="application/pdf" width="700px" height="700px">
    <embed src="../images/cv.pdf">
        <p>This browser does not support PDFs. Please download the PDF to view it: <a href="../images/cv.pdf">Download PDF</a>.</p>
    </embed>
</object>
